{"ast":null,"code":"import { NOTIFICATIONS_LIST_REQUEST, NOTIFICATIONS_LIST_SUCCESS, NOTIFICATIONS_LIST_FAIL, CHAT_LIST_REQUEST, CHAT_LIST_SUCCESS, CHAT_LIST_FAIL, MATCHES_CREATE_FAIL, MATCHES_CREATE_REQUEST, MATCHES_CREATE_SUCCESS, MATCHES_CONFIRM_FAIL, MATCHES_CONFIRM_REQUEST, MATCHES_CONFIRM_SUCCESS, MATCHES_DELETE_FAIL, MATCHES_DELETE_REQUEST, MATCHES_DELETE_SUCCESS } from \"../constants/matchConstants\";\nimport axios from \"axios\";\nexport const listNotifications = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTIFICATIONS_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${baseUrl}/api/matches`, {\n      isMentor: true,\n      isMentee: true,\n      confirmed: \"both\",\n      deleted: false\n    }, config);\n    dispatch({\n      type: NOTIFICATIONS_LIST_SUCCESS,\n      payload: data.filter(match => match.mentorId === userInfo._id && !match.confirmed || match.userId === userInfo._id && match.confirmed && match.messages.length <= 1)\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: NOTIFICATIONS_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listChats = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CHAT_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/matches`, {\n      isMentor: true,\n      isMentee: true,\n      confirmed: true,\n      deleted: false\n    }, config);\n    dispatch({\n      type: CHAT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: CHAT_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const requestMatch = (mentor, mentorId, mentorPic, postId, message) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MATCHES_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/matches/create`, {\n      mentor,\n      mentorId,\n      mentorPic,\n      postId,\n      messages: [{\n        senderName: userInfo.name,\n        to: mentorId,\n        type: \"text\",\n        data: {\n          text: message\n        },\n        id: userInfo._id + Date.now()\n      }]\n    }, config);\n    dispatch({\n      type: MATCHES_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: MATCHES_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const confirmMatch = match => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MATCHES_CONFIRM_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/matches/${match._id}`, {\n      mentor: match.mentor,\n      mentorPic: match.mentorPic,\n      user: match.user,\n      userPic: match.userPic,\n      newMessage: null,\n      confirmed: true,\n      deleted: match.deleted\n    }, config);\n    dispatch({\n      type: MATCHES_CONFIRM_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: MATCHES_CONFIRM_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteMatch = match => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MATCHES_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/matches/${match._id}`, {\n      mentor: match.mentor,\n      mentorPic: match.mentorPic,\n      user: match.user,\n      userPic: match.userPic,\n      newMessage: null,\n      confirmed: match.confirmed,\n      deleted: true\n    }, config);\n    dispatch({\n      type: MATCHES_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: MATCHES_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const messageMatch = (match, newMessage) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MATCHES_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/matches/${match._id}`, {\n      mentor: match.mentor,\n      mentorPic: match.mentorPic,\n      user: match.user,\n      userPic: match.userPic,\n      newMessage,\n      confirmed: match.confirmed,\n      deleted: match.deleted\n    }, config);\n    dispatch({\n      type: MATCHES_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: MATCHES_DELETE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/dyllanliu/Desktop/BigLittle/frontend/src/actions/matchActions.js"],"names":["NOTIFICATIONS_LIST_REQUEST","NOTIFICATIONS_LIST_SUCCESS","NOTIFICATIONS_LIST_FAIL","CHAT_LIST_REQUEST","CHAT_LIST_SUCCESS","CHAT_LIST_FAIL","MATCHES_CREATE_FAIL","MATCHES_CREATE_REQUEST","MATCHES_CREATE_SUCCESS","MATCHES_CONFIRM_FAIL","MATCHES_CONFIRM_REQUEST","MATCHES_CONFIRM_SUCCESS","MATCHES_DELETE_FAIL","MATCHES_DELETE_REQUEST","MATCHES_DELETE_SUCCESS","axios","listNotifications","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","baseUrl","isMentor","isMentee","confirmed","deleted","payload","filter","match","mentorId","_id","userId","messages","length","error","message","response","listChats","requestMatch","mentor","mentorPic","postId","put","senderName","name","to","text","id","Date","now","confirmMatch","user","userPic","newMessage","deleteMatch","messageMatch"],"mappings":"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","sourcesContent":["import {\n  NOTIFICATIONS_LIST_REQUEST, \n  NOTIFICATIONS_LIST_SUCCESS, \n  NOTIFICATIONS_LIST_FAIL,\n  CHAT_LIST_REQUEST, \n  CHAT_LIST_SUCCESS, \n  CHAT_LIST_FAIL,\n  MATCHES_CREATE_FAIL,\n  MATCHES_CREATE_REQUEST,\n  MATCHES_CREATE_SUCCESS,\n  MATCHES_CONFIRM_FAIL,\n  MATCHES_CONFIRM_REQUEST,\n  MATCHES_CONFIRM_SUCCESS,\n  MATCHES_DELETE_FAIL,\n  MATCHES_DELETE_REQUEST,\n  MATCHES_DELETE_SUCCESS,\n} from \"../constants/matchConstants\";\nimport axios from \"axios\";\n\nexport const listNotifications = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTIFICATIONS_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `${baseUrl}/api/matches`, \n      { isMentor: true, isMentee: true, confirmed: \"both\", deleted: false },\n      config\n    );\n\n    dispatch({\n      type: NOTIFICATIONS_LIST_SUCCESS,\n      payload: data.filter(match => (match.mentorId === userInfo._id && !match.confirmed) || (match.userId === userInfo._id && match.confirmed && match.messages.length <= 1)),\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTIFICATIONS_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const listChats = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CHAT_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/matches`, \n      { isMentor: true, isMentee: true, confirmed: true, deleted: false },\n      config\n    );\n\n    dispatch({\n      type: CHAT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: CHAT_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const requestMatch = (mentor, mentorId, mentorPic, postId, message) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: MATCHES_CREATE_REQUEST,\n      });\n  \n      const {\n        userLogin: { userInfo },\n      } = getState();\n  \n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/matches/create`,\n        { mentor, mentorId, mentorPic, postId, messages: [{ senderName: userInfo.name, to: mentorId, type: \"text\", data: { text: message }, id: userInfo._id + Date.now() }] },\n        config\n      );\n  \n      dispatch({\n        type: MATCHES_CREATE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({\n        type: MATCHES_CREATE_FAIL,\n        payload: message,\n      });\n    }\n};\n\nexport const confirmMatch = (match) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MATCHES_CONFIRM_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/matches/${match._id}`,\n      {\n        mentor: match.mentor, \n        mentorPic: match.mentorPic, \n        user: match.user, \n        userPic: match.userPic, \n        newMessage: null, \n        confirmed: true, \n        deleted: match.deleted\n      },\n      config\n    );\n\n    dispatch({\n      type: MATCHES_CONFIRM_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: MATCHES_CONFIRM_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const deleteMatch = (match) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MATCHES_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/matches/${match._id}`,\n      {\n        mentor: match.mentor, \n        mentorPic: match.mentorPic, \n        user: match.user, \n        userPic: match.userPic, \n        newMessage: null, \n        confirmed: match.confirmed, \n        deleted: true\n      },\n      config\n    );\n\n    dispatch({\n      type: MATCHES_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: MATCHES_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const messageMatch = (match, newMessage) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MATCHES_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n\n    const { data } = await axios.post(\n      `/api/matches/${match._id}`,\n      {\n        mentor: match.mentor, \n        mentorPic: match.mentorPic, \n        user: match.user, \n        userPic: match.userPic, \n        newMessage, \n        confirmed: match.confirmed, \n        deleted: match.deleted\n      },\n      config\n    );\n\n    dispatch({\n      type: MATCHES_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: MATCHES_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}