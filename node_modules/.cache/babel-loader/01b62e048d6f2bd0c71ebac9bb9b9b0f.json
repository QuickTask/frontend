{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hugozhan/Desktop/do-it/quicktask/src/screens/SingleNote/SingleNote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, updateNoteAction } from \"../../actions/notesActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\n\nfunction SingleNote({\n  match,\n  history\n}) {\n  _s();\n\n  const [headline, setHeadline] = useState(\"\");\n  const [aboutYou, setAboutYou] = useState(\"\");\n  const [education, setEducation] = useState(\"\");\n  const [relevantExperience, setRelevantExperience] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const dispatch = useDispatch();\n  const noteUpdate = useSelector(state => state.noteUpdate);\n  const {\n    loading,\n    error\n  } = noteUpdate;\n  const noteDelete = useSelector(state => state.noteDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete\n  } = noteDelete;\n\n  const deleteHandler = id => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n\n    history.push(\"/home\");\n  };\n\n  useEffect(() => {\n    const fetching = async () => {\n      const {\n        data\n      } = await axios.get(`/api/notes/${match.params.id}`);\n      setHeadline(data.headline);\n      setAboutYou(data.aboutYou);\n      setEducation(data.education);\n      setRelevantExperience(data.relevantExperience);\n      setCategory(data.category);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\n  const resetHandler = () => {\n    setHeadline(\"\");\n    setAboutYou(\"\");\n    setEducation(\"\");\n    setRelevantExperience(\"\");\n    setCategory(\"\");\n  };\n\n  const updateHandler = e => {\n    e.preventDefault();\n    dispatch(updateNoteAction(match.params.id, headline, aboutYou, education, relevantExperience, category));\n    if (!headline || !aboutYou || !category) return;\n    resetHandler();\n    history.push(\"/home\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"Edit your Post\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Edit your Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: updateHandler,\n          children: [loadingDelete && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 31\n          }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 23\n          }, this), errorDelete && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            variant: \"danger\",\n            children: errorDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Headline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"title\",\n              value: headline,\n              placeholder: \"Enter the title\",\n              onChange: e => setHeadline(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"About You\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              value: aboutYou,\n              placeholder: \"Enter the content\",\n              rows: 4,\n              onChange: e => setAboutYou(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Education\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              value: education,\n              placeholder: \"Enter the content\",\n              rows: 4,\n              onChange: e => setEducation(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Relevant Experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              value: relevantExperience,\n              placeholder: \"Enter the content\",\n              rows: 4,\n              onChange: e => setRelevantExperience(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"content\",\n              value: category,\n              placeholder: \"Enter the Category\",\n              onChange: e => setCategory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {\n            size: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Update your Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"mx-2\",\n            variant: \"danger\",\n            onClick: () => deleteHandler(match.params.id),\n            children: \"Delete your Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        className: \"text-muted\",\n        children: [\"Updated on - \", date.substring(0, 10)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleNote, \"NKiy1xUEGX96+kQvglqUO1pmH5o=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = SingleNote;\nexport default SingleNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleNote\");","map":{"version":3,"sources":["/Users/hugozhan/Desktop/do-it/quicktask/src/screens/SingleNote/SingleNote.js"],"names":["React","useEffect","useState","MainScreen","axios","Button","Card","Form","useDispatch","useSelector","deleteNoteAction","updateNoteAction","ErrorMessage","Loading","SingleNote","match","history","headline","setHeadline","aboutYou","setAboutYou","education","setEducation","relevantExperience","setRelevantExperience","category","setCategory","date","setDate","dispatch","noteUpdate","state","loading","error","noteDelete","loadingDelete","errorDelete","deleteHandler","id","window","confirm","push","fetching","data","get","params","updatedAt","resetHandler","updateHandler","e","preventDefault","target","value","substring"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, updateNoteAction } from \"../../actions/notesActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\n\nfunction SingleNote({ match, history }) {\n  const [headline, setHeadline] = useState(\"\");\n  const [aboutYou, setAboutYou] = useState(\"\");\n  const [education, setEducation] = useState(\"\");\n  const [relevantExperience, setRelevantExperience] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { loading, error } = noteUpdate;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const { loading: loadingDelete, error: errorDelete } = noteDelete;\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n    history.push(\"/home\");\n  };\n\n  useEffect(() => {\n    const fetching = async () => {\n      const { data } = await axios.get(`/api/notes/${match.params.id}`);\n\n      setHeadline(data.headline);\n      setAboutYou(data.aboutYou);\n      setEducation(data.education);\n      setRelevantExperience(data.relevantExperience);\n      setCategory(data.category);\n      setDate(data.updatedAt)\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\n  const resetHandler = () => {\n    setHeadline(\"\");\n    setAboutYou(\"\");\n    setEducation(\"\");\n    setRelevantExperience(\"\");\n    setCategory(\"\");\n  };\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateNoteAction(match.params.id, headline, aboutYou, education, relevantExperience, category));\n    if (!headline || !aboutYou || !category) return;\n\n    resetHandler();\n    history.push(\"/home\");\n  };\n\n  return (\n    <MainScreen title=\"Edit your Post\">\n      <Card>\n        <Card.Header>Edit your Post</Card.Header>\n        <Card.Body>\n          <Form onSubmit={updateHandler}>\n            {loadingDelete && <Loading />}\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            {errorDelete && (\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n            )}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Headline</Form.Label>\n              <Form.Control\n                type=\"title\"\n                value={headline}\n                placeholder=\"Enter the title\"\n                onChange={(e) => setHeadline(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>About You</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={aboutYou}\n                placeholder=\"Enter the content\"\n                rows={4}\n                onChange={(e) => setAboutYou(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"content\">\n              <Form.Label>Education</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={education}\n                placeholder=\"Enter the content\"\n                rows={4}\n                onChange={(e) => setEducation(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"content\">\n              <Form.Label>Relevant Experience</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={relevantExperience}\n                placeholder=\"Enter the content\"\n                rows={4}\n                onChange={(e) => setRelevantExperience(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                value={category}\n                placeholder=\"Enter the Category\"\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button variant=\"primary\" type=\"submit\">\n              Update your Post\n            </Button>\n            <Button\n              className=\"mx-2\"\n              variant=\"danger\"\n              onClick={() => deleteHandler(match.params.id)}\n            >\n              Delete your Post\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Updated on - {date.substring(0, 10)}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default SingleNote;\n"]},"metadata":{},"sourceType":"module"}