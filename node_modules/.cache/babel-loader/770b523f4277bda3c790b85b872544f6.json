{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { noteCreateReducer, noteDeleteReducer, noteListReducer, noteUpdateReducer } from \"./reducers/notesReducers\";\nimport { userGetReducer, userLoginReducer, userRegisterReducer, userUpdateReducer } from \"./reducers/userReducers\";\nimport { matchCreateReducer, matchConfirmReducer, notificationsListReducer, chatListReducer } from \"./reducers/matchReducers\";\nconst reducer = combineReducers({\n  noteList: noteListReducer,\n  userLogin: userLoginReducer,\n  userGet: userGetReducer,\n  userRegister: userRegisterReducer,\n  noteCreate: noteCreateReducer,\n  noteDelete: noteDeleteReducer,\n  noteUpdate: noteUpdateReducer,\n  userUpdate: userUpdateReducer,\n  matchCreate: matchCreateReducer,\n  notificationsList: notificationsListReducer,\n  chatList: chatListReducer,\n  matchConfirm: matchConfirmReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/hugozhan/Desktop/do-it/quicktask/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","noteCreateReducer","noteDeleteReducer","noteListReducer","noteUpdateReducer","userGetReducer","userLoginReducer","userRegisterReducer","userUpdateReducer","matchCreateReducer","matchConfirmReducer","notificationsListReducer","chatListReducer","reducer","noteList","userLogin","userGet","userRegister","noteCreate","noteDelete","noteUpdate","userUpdate","matchCreate","notificationsList","chatList","matchConfirm","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,iBAJF,QAKO,0BALP;AAMA,SACEC,cADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,iBAJF,QAKO,yBALP;AAMA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,wBAHF,EAIEC,eAJF,QAKO,0BALP;AAOA,MAAMC,OAAO,GAAGhB,eAAe,CAAC;AAC9BiB,EAAAA,QAAQ,EAAEX,eADoB;AAE9BY,EAAAA,SAAS,EAAET,gBAFmB;AAG9BU,EAAAA,OAAO,EAAEX,cAHqB;AAI9BY,EAAAA,YAAY,EAAEV,mBAJgB;AAK9BW,EAAAA,UAAU,EAAEjB,iBALkB;AAM9BkB,EAAAA,UAAU,EAAEjB,iBANkB;AAO9BkB,EAAAA,UAAU,EAAEhB,iBAPkB;AAQ9BiB,EAAAA,UAAU,EAAEb,iBARkB;AAS9Bc,EAAAA,WAAW,EAAEb,kBATiB;AAU9Bc,EAAAA,iBAAiB,EAAEZ,wBAVW;AAW9Ba,EAAAA,QAAQ,EAAEZ,eAXoB;AAY9Ba,EAAAA,YAAY,EAAEf;AAZgB,CAAD,CAA/B;AAeA,MAAMgB,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBhB,EAAAA,SAAS,EAAE;AAAEiB,IAAAA,QAAQ,EAAEN;AAAZ;AADQ,CAArB;AAIA,MAAMO,UAAU,GAAG,CAAClC,KAAD,CAAnB;AAEA,MAAMmC,KAAK,GAAGtC,WAAW,CACvBiB,OADuB,EAEvBkB,YAFuB,EAGvB/B,mBAAmB,CAACF,eAAe,CAAC,GAAGmC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  noteCreateReducer,\n  noteDeleteReducer,\n  noteListReducer,\n  noteUpdateReducer,\n} from \"./reducers/notesReducers\";\nimport {\n  userGetReducer,\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n  matchCreateReducer,\n  matchConfirmReducer,\n  notificationsListReducer,\n  chatListReducer\n} from \"./reducers/matchReducers\";\n\nconst reducer = combineReducers({\n  noteList: noteListReducer,\n  userLogin: userLoginReducer,\n  userGet: userGetReducer,\n  userRegister: userRegisterReducer,\n  noteCreate: noteCreateReducer,\n  noteDelete: noteDeleteReducer,\n  noteUpdate: noteUpdateReducer,\n  userUpdate: userUpdateReducer,\n  matchCreate: matchCreateReducer,\n  notificationsList: notificationsListReducer,\n  chatList: chatListReducer,\n  matchConfirm: matchConfirmReducer\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}