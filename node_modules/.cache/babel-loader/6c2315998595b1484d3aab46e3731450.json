{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dyllanliu/Desktop/BigLittle/frontend/src/screens/SingleNote/CreateNote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNoteAction } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nfunction CreateNote({\n  history\n}) {\n  _s();\n\n  const [headline, setHeadline] = useState(\"\");\n  const [aboutYou, setAboutYou] = useState(\"\");\n  const [education, setEducation] = useState(\"\");\n  const [relevantExperience, setRelevantExperience] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const dispatch = useDispatch();\n  const noteCreate = useSelector(state => state.noteCreate);\n  const {\n    loading,\n    error,\n    note\n  } = noteCreate;\n\n  const resetHandler = () => {\n    setHeadline(\"\");\n    setAboutYou(\"\");\n    setEducation(\"\");\n    setRelevantExperience(\"\");\n    setCategory(\"\");\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log('bruh');\n    dispatch(createNoteAction(headline, aboutYou, education, relevantExperience, category));\n    if (!headline || !aboutYou || !category) return;\n    resetHandler();\n    history.push(\"/home\");\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"Create a Task\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"List your task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Task Name*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"title\",\n              value: headline,\n              placeholder: \"Need a gym buddy\",\n              onChange: e => setHeadline(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"Description\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Task Details*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              value: aboutYou,\n              placeholder: \"Enter the content\",\n              rows: 4,\n              onChange: e => setAboutYou(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              value: relevantExperience,\n              placeholder: \"Enter the content\",\n              rows: 4,\n              onChange: e => setRelevantExperience(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Category*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"content\",\n              value: category,\n              placeholder: \"Enter the Category\",\n              onChange: e => setCategory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {\n            size: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Create Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"mx-2\",\n            onClick: resetHandler,\n            variant: \"danger\",\n            children: \"Reset Feilds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        className: \"text-muted\",\n        children: [\"Creating on - \", new Date().toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateNote, \"pzAcFNJkTDcEQ36qaHpQp2NrRIw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CreateNote;\nexport default CreateNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"sources":["/Users/dyllanliu/Desktop/BigLittle/frontend/src/screens/SingleNote/CreateNote.js"],"names":["React","useEffect","useState","MainScreen","Button","Card","Form","useDispatch","useSelector","createNoteAction","Loading","ErrorMessage","CreateNote","history","headline","setHeadline","aboutYou","setAboutYou","education","setEducation","relevantExperience","setRelevantExperience","category","setCategory","dispatch","noteCreate","state","loading","error","note","resetHandler","submitHandler","e","preventDefault","console","log","push","target","value","Date","toLocaleDateString"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNoteAction } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nfunction CreateNote({ history }) {\n  const [headline, setHeadline] = useState(\"\");\n  const [aboutYou, setAboutYou] = useState(\"\");\n  const [education, setEducation] = useState(\"\");\n  const [relevantExperience, setRelevantExperience] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { loading, error, note } = noteCreate;\n\n  const resetHandler = () => {\n    setHeadline(\"\");\n    setAboutYou(\"\");\n    setEducation(\"\");\n    setRelevantExperience(\"\");\n    setCategory(\"\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    console.log('bruh')\n    dispatch(createNoteAction(headline, aboutYou, education, relevantExperience, category));\n    if (!headline || !aboutYou || !category) return;\n\n    resetHandler();\n    history.push(\"/home\");\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <MainScreen title=\"Create a Task\">\n      <Card>\n        <Card.Header>List your task</Card.Header>\n        <Card.Body>\n          <Form onSubmit={submitHandler}>\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Task Name*</Form.Label>\n              <Form.Control\n                type=\"title\"\n                value={headline}\n                placeholder=\"Need a gym buddy\"\n                onChange={(e) => setHeadline(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"Description\">\n              <Form.Label>Task Details*</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={aboutYou}\n                placeholder=\"Enter the content\"\n                rows={4}\n                onChange={(e) => setAboutYou(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"content\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={relevantExperience}\n                placeholder=\"Enter the content\"\n                rows={4}\n                onChange={(e) => setRelevantExperience(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category*</Form.Label>\n              <Form.Control\n                type=\"content\"\n                value={category}\n                placeholder=\"Enter the Category\"\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button type=\"submit\" variant=\"primary\">\n              Create Post\n            </Button>\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\n              Reset Feilds\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Creating on - {new Date().toLocaleDateString()}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default CreateNote;\n"]},"metadata":{},"sourceType":"module"}